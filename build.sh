#!/bin/bash

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

FOLDER=${1:-"tg"}
REPO=${2:-"https://github.com/kalentivan/tg.git"}
NET=${3:-"tg-net"}
IMAGE=${4:-"tg-back"}

# –§—É–Ω–∫—Ü–∏—è –æ—à–∏–±–∫–∏
error_exit() {
    echo -e "${RED}–û—à–∏–±–∫–∞: $1${NC}" >&2
    exit 1
}

echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Compose V2..."

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg lsb-release || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
if [ ! -f /etc/apt/keyrings/docker.gpg ]; then
    echo "üîë –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ Docker..."
    sudo install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/$(. /etc/os-release && echo "$ID")/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á Docker"
    sudo chmod a+r /etc/apt/keyrings/docker.gpg

    echo "üìÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker..."
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/$(. /etc/os-release && echo "$ID") \
      $(lsb_release -cs) stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ docker-ce –∏ docker-compose-plugin
if ! command -v docker &>/dev/null; then
    echo "‚¨áÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker"
else
    echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker compose V2
if ! docker compose version &>/dev/null; then
    echo "‚¨áÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Compose V2 (plugin)..."
    sudo apt-get install -y docker-compose-plugin || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å docker compose plugin"
else
    echo "‚úÖ Docker Compose V2 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫ –∏ enable Docker
if ! systemctl is-active --quiet docker; then
    echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ Docker..."
    sudo systemctl start docker || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Docker"
    sudo systemctl enable docker
else
    echo "‚úÖ Docker —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
if [ "$(docker ps -q -f name=${IMAGE})" ]; then
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ${IMAGE}..."
    docker stop ${IMAGE} || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ${IMAGE}"
    docker rm ${IMAGE} || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ${IMAGE}"
fi

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ Docker..."
docker system prune -f || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫–µ—à"

# –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞, –µ—Å–ª–∏ –æ–Ω–∞ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–∞
if [ -d "$FOLDER" ]; then
    echo "üõë –£–¥–∞–ª—è—é –ø–∞–ø–∫—É: $FOLDER"
    rm -rf "$FOLDER"
else
    echo "üìÅ –ü–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $FOLDER"
fi

# –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ $FOLDER..."
mkdir -p "${FOLDER}" || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É"
cd "${FOLDER}" || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–ø–∫—É"

# Git
if ! command -v git &>/dev/null; then
    echo "üõ† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git..."
    sudo apt-get install -y git || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Git"
fi

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
if [ -d ".git" ]; then
    echo "üîÑ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
    git pull origin main || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
else
    echo "‚¨áÔ∏è –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    git clone "$REPO" . || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
fi

# Docker-—Å–µ—Ç—å
echo "üåê –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏ $NET..."
docker network create "$NET" 2>/dev/null || echo "–°–µ—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p logs stat pgdata || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"


# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É .env
ENV_FILE=".env"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª .env
if [ ! -f "$ENV_FILE" ]; then
    echo "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ò—â–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TG_DB_HOST –≤ —Ñ–∞–π–ª–µ
if grep -q '^TG_DB_HOST=' "$ENV_FILE"; then
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    current_value=$(grep '^TG_DB_HOST=' "$ENV_FILE" | cut -d '=' -f2 | tr -d '"')

    # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ pgbouncer, –º–µ–Ω—è–µ–º –µ–≥–æ
    if [ "$current_value" != "pgbouncer" ]; then
        # –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª–µ
        sed -i 's/^TG_DB_HOST=.*/TG_DB_HOST="pgbouncer"/' "$ENV_FILE"
        echo "–ó–Ω–∞—á–µ–Ω–∏–µ TG_DB_HOST –∏–∑–º–µ–Ω–µ–Ω–æ —Å '$current_value' –Ω–∞ 'pgbouncer'"
    else
        echo "TG_DB_HOST —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ 'pgbouncer', –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è"
    fi
else
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ
    echo 'TG_DB_HOST="pgbouncer"' >> "$ENV_FILE"
    echo "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TG_DB_HOST –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 'pgbouncer'"
fi

# –°–±–æ—Ä–∫–∞
echo "üî® –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–æ–≤..."
 docker build -t ${IMAGE} . || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å Docker-–æ–±—Ä–∞–∑—ã"

# –ó–∞–ø—É—Å–∫
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose up -d --force-recreate && docker compose logs -f || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"

echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!${NC}"
echo "üîó FastAPI –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://87.228.78.162:8000/"
